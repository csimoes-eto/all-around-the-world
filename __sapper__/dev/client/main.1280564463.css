main.svelte-1a5sfto{position:relative;padding:5vh 6vw;box-sizing:border-box;box-shadow:-1px -2px 2px 0px rgba(133, 133, 133, 0.65);height:100%}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
@media(max-width: 480px){.cards-container.svelte-qto3t8{flex-direction:column}}.outer-container.svelte-qto3t8{height:100%}.loading.svelte-qto3t8{height:80.5vh}.cards-container.svelte-qto3t8{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between;width:100%}
button.svelte-cy2qqy{box-shadow:0px 0px 5px 1px rgba(133, 133, 133, 0.3);border-radius:5px;border-color:transparent;font-size:0.875em;width:10vw;height:5vh;margin-bottom:3em;overflow:hidden}button.svelte-cy2qqy:hover{box-shadow:0px 0px 5px 5px rgba(133, 133, 133, 0.3);outline-color:transparent;cursor:pointer}button.svelte-cy2qqy:focus{outline-color:transparent}
nav.svelte-9m2n9i{padding:0.5vh 4.5vw 0.75vh 6vw;height:8vh}h3.svelte-9m2n9i{font-weight:800}
@media(max-width: 480px){.card.svelte-gffbst{width:100% !important}}img.svelte-gffbst{width:100%;height:50%;object-fit:cover}h4.svelte-gffbst{font-weight:800;margin:0.75em 0 0.5em 0}span.svelte-gffbst{font-weight:600}p.svelte-gffbst{margin:0 0 0.25em 0;font-weight:300;font-size:0.875em}a.svelte-gffbst{color:inherit;text-decoration:inherit;width:inherit;height:initial}a.svelte-gffbst:hover{opacity:70%}.card.svelte-gffbst{box-shadow:0px 0px 5px 1px rgba(133, 133, 133, 0.3);border-radius:5px;margin-bottom:3.75em;width:18vw;flex-basis:auto;overflow:hidden}.container-info.svelte-gffbst{width:80%;margin:auto auto}
input.svelte-16n02qi{box-shadow:0px 0px 5px 1px rgba(133, 133, 133, 0.3);border-radius:5px;border-color:transparent;font-size:0.875em;width:30vw;height:5vh;margin-bottom:3em}input.svelte-16n02qi:focus{box-shadow:0px 0px 5px 5px rgba(133, 133, 133, 0.3);outline-color:transparent}
select.svelte-127wbb3{float:right;box-shadow:0px 0px 5px 1px rgba(133, 133, 133, 0.3);border-radius:5px;border-color:transparent;font-size:0.875em;width:12vw;height:5.8vh;margin-bottom:3em}select.svelte-127wbb3:focus{box-shadow:0px 0px 5px 5px rgba(133, 133, 133, 0.3);outline-color:transparent}
span.svelte-17bj0k6.svelte-17bj0k6{font-weight:600}h2.svelte-17bj0k6.svelte-17bj0k6{margin:0}p.svelte-17bj0k6.svelte-17bj0k6{margin:0 0 0.25em 0;font-weight:300;font-size:1em}img.svelte-17bj0k6.svelte-17bj0k6{width:75%;height:auto}.container.svelte-17bj0k6.svelte-17bj0k6{display:grid;grid-template-columns:repeat(2, 1fr);grid-column-gap:0}.flag-image.svelte-17bj0k6.svelte-17bj0k6{align-self:center}.country-info-outter.svelte-17bj0k6.svelte-17bj0k6{display:grid;grid-template-columns:[col1] 1fr [col2] 1fr;grid-template-rows:[row1] 2fr [row2] 5fr [row3] 2fr;grid-column-gap:2rem}.country-info-name.svelte-17bj0k6.svelte-17bj0k6{align-self:center}.country-info-inner-left.svelte-17bj0k6.svelte-17bj0k6{grid-column-start:col1;grid-row-start:row2}.country-info-inner-right.svelte-17bj0k6.svelte-17bj0k6{grid-column-start:col2;grid-row-start:row2}.country-info-borders.svelte-17bj0k6.svelte-17bj0k6{grid-column-start:col1;grid-column-end:end;grid-row-start:row3}.country-info-borders.svelte-17bj0k6 p.svelte-17bj0k6{float:left;margin:0.25rem 0 0 0}.country-info-borders.svelte-17bj0k6 button.svelte-17bj0k6{margin-bottom:0;float:left;margin:0.25rem 0.5rem;box-shadow:0px 0px 5px 1px rgba(133, 133, 133, 0.3);border-radius:5px;border-color:transparent;font-size:0.875em;width:auto;height:3vh;overflow:hidden}.country-info-borders.svelte-17bj0k6 button.svelte-17bj0k6:hover{box-shadow:0px 0px 5px 5px rgba(133, 133, 133, 0.3);outline-color:transparent;cursor:pointer}.country-info-borders.svelte-17bj0k6 button.svelte-17bj0k6:focus{outline-color:transparent}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */